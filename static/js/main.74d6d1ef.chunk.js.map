{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todoList","setUserModal","eyeMark","setEyeMark","setShowModal","eyeButtonHandler","todo","userId","id","user","mutateUser","className","map","completed","title","type","onClick","TodoFilter","React","memo","sortType","sortValue","useState","search","setSearch","value","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","arg","Boolean","href","email","name","App","loaded","setLoaded","sourceData","setSourceData","sortBy","setSortBy","userModal","showModal","todos","filter","includes","sortTodos","useEffect","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74d6d1ef.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoUser } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todoList: Todo[];\n  setUserModal: (arg: null | TodoUser)=> void;\n  setShowModal: (arg: boolean)=> void;\n  eyeMark: number;\n  setEyeMark: (arg: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todoList, setUserModal, eyeMark, setEyeMark, setShowModal,\n}) => {\n  const eyeButtonHandler = (todo: Todo) => {\n    setEyeMark(todo.id);\n    setShowModal(true);\n\n    getUser(todo.userId)\n      .then(user => {\n        return { ...user, todo };\n      })\n      .then(mutateUser => setUserModal(mutateUser));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todoList.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={`${todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => eyeButtonHandler(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`${eyeMark === todo.id ? 'far fa-eye-slash' : 'far fa-eye'}`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  sortType: (arg: string) => void;\n  sortValue: string;\n};\n\nexport const TodoFilter: React.FC<Props>\n  = React.memo(({ sortType, sortValue }) => {\n    const [search, setSearch] = useState('');\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={sortValue}\n              onChange={(e) => sortType(e.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={e => {\n              setSearch(e.target.value);\n              sortType(e.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                sortType('');\n                setSearch('');\n              }}\n            />\n          </span>\n        </p>\n      </form>\n    );\n  });\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { TodoUser } from '../../types/User';\n\nconst check = (arg: TodoUser): boolean => {\n  return Boolean(arg);\n};\n\ntype Props = {\n  user: TodoUser\n  setEyeMark: (arg: number) => void\n  setShowModal: (arg: boolean) => void\n  setUserModal: (arg: TodoUser | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  setEyeMark,\n  setUserModal,\n  setShowModal,\n}) => {\n  const closeButtonHandler = () => {\n    setUserModal(null);\n    setShowModal(false);\n    setEyeMark(-1);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      { check(user) ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${user.todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeButtonHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {user.todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {user.todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (<Loader />)}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoUser } from './types/User';\n\nexport const App: React.FC = () => {\n  const [loaded, setLoaded] = useState(false);\n  const [sourceData, setSourceData] = useState<Todo[]>([]);\n  const [sortBy, setSortBy] = useState('all');\n  const [userModal, setUserModal] = useState<TodoUser | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [eyeMark, setEyeMark] = useState<number>(-1);\n  const sortTodos = () => {\n    if (loaded) {\n      switch (sortBy) {\n        case 'active':\n          return sourceData.filter((todo) => !todo.completed);\n        case 'completed':\n          return sourceData.filter((todo) => todo.completed);\n        case 'all':\n          return sourceData;\n        default:\n          return sourceData.filter((todo) => todo.title.includes(sortBy));\n      }\n    }\n\n    return [];\n  };\n\n  const todos = sortTodos();\n\n  useEffect(() => {\n    getTodos().then((list) => {\n      setSourceData(list);\n      setLoaded(true);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter sortType={setSortBy} sortValue={sortBy} />\n            </div>\n\n            <div className=\"block\">\n              {loaded ? (\n                <TodoList\n                  todoList={todos !== null ? todos : []}\n                  setUserModal={setUserModal}\n                  setShowModal={setShowModal}\n                  eyeMark={eyeMark}\n                  setEyeMark={setEyeMark}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* {check(userModal) && ( */}\n      {showModal && (\n        <TodoModal\n          user={userModal as TodoUser}\n          setEyeMark={setEyeMark}\n          setUserModal={setUserModal}\n          setShowModal={setShowModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}